name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Lint with flake8
        run: |
          flake8 src tests

      - name: Format check with black
        run: |
          black --check src tests

      - name: Type check with mypy
        run: |
          mypy src

      - name: Test with pytest
        run: |
          pytest --cov=photo_organizer

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Build package
        run: |
          python -m build

      - name: Build executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller pyinstaller/photo_organizer.spec

      - name: Build executable (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller pyinstaller/photo_organizer.spec

      - name: Build executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller pyinstaller/photo_organizer.spec

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: photo-organizer-${{ matrix.os }}
          path: |
            dist/*.whl
            dist/*.tar.gz
            dist/photo-organizer/
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/photo-organizer-windows-latest/*.exe
            artifacts/photo-organizer-macos-latest/*.dmg
            artifacts/photo-organizer-ubuntu-latest/*.AppImage
            artifacts/photo-organizer-ubuntu-latest/*.deb
            artifacts/photo-organizer-ubuntu-latest/*.rpm
            artifacts/*/*.whl
            artifacts/*/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
